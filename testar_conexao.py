"""
Arquivo de teste para verificar a conex√£o e funcionamento b√°sico do sistema
Execute este arquivo para verificar se tudo est√° configurado corretamente
"""

from supabase_functions import (
    supabase,
    listar_turmas,
    analisar_estatisticas_extrato,
    identificar_responsaveis_nao_cadastrados
)

def testar_conexao():
    """Testa a conex√£o b√°sica com o Supabase"""
    print("üîó Testando conex√£o com Supabase...")
    try:
        # Teste simples de conex√£o
        response = supabase.table("responsaveis").select("id").limit(1).execute()
        print("‚úÖ Conex√£o com Supabase estabelecida com sucesso!")
        return True
    except Exception as e:
        print(f"‚ùå Erro na conex√£o: {str(e)}")
        print("Verifique:")
        print("- Se o arquivo .env est√° configurado corretamente")
        print("- Se as credenciais do Supabase est√£o corretas")
        print("- Se a tabela 'responsaveis' existe no banco")
        return False

def testar_tabelas():
    """Verifica se as tabelas principais existem"""
    print("\nüìã Verificando tabelas...")
    
    tabelas_necessarias = [
        "alunos",
        "responsaveis", 
        "turmas",
        "extrato_pix",
        "pagamentos",
        "alunos_responsaveis",
        "mensalidades"
    ]
    
    tabelas_ok = []
    tabelas_erro = []
    
    for tabela in tabelas_necessarias:
        try:
            response = supabase.table(tabela).select("*").limit(1).execute()
            tabelas_ok.append(tabela)
        except Exception as e:
            tabelas_erro.append((tabela, str(e)))
    
    print(f"‚úÖ Tabelas funcionando: {len(tabelas_ok)}")
    for tabela in tabelas_ok:
        print(f"   ‚Ä¢ {tabela}")
    
    if tabelas_erro:
        print(f"\n‚ùå Tabelas com problema: {len(tabelas_erro)}")
        for tabela, erro in tabelas_erro:
            print(f"   ‚Ä¢ {tabela}: {erro}")
        return False
    
    return True

def testar_funcoes_basicas():
    """Testa algumas fun√ß√µes b√°sicas do sistema"""
    print("\nüîß Testando fun√ß√µes b√°sicas...")
    
    # Teste 1: Listar turmas
    print("1. Testando listar_turmas()...")
    try:
        resultado = listar_turmas()
        if resultado["success"]:
            print(f"   ‚úÖ Encontradas {resultado['count']} turmas")
            if resultado["count"] > 0:
                print(f"   Exemplo: {resultado['data'][0]['nome_turma']}")
        else:
            print(f"   ‚ùå Erro: {resultado['error']}")
    except Exception as e:
        print(f"   ‚ùå Exce√ß√£o: {str(e)}")
    
    # Teste 2: Analisar estat√≠sticas do extrato
    print("\n2. Testando analisar_estatisticas_extrato()...")
    try:
        resultado = analisar_estatisticas_extrato()
        if resultado["success"]:
            stats = resultado["estatisticas"]
            print(f"   ‚úÖ Estat√≠sticas obtidas:")
            print(f"   ‚Ä¢ Total de registros: {stats['total_registros']}")
            print(f"   ‚Ä¢ Identificados: {stats['total_identificados']}")
            print(f"   ‚Ä¢ N√£o identificados: {stats['total_nao_identificados']}")
            print(f"   ‚Ä¢ Percentual: {stats['percentual_identificacao']}%")
        else:
            print(f"   ‚ùå Erro: {resultado['error']}")
    except Exception as e:
        print(f"   ‚ùå Exce√ß√£o: {str(e)}")
    
    # Teste 3: Identificar respons√°veis n√£o cadastrados
    print("\n3. Testando identificar_responsaveis_nao_cadastrados()...")
    try:
        resultado = identificar_responsaveis_nao_cadastrados()
        if resultado["success"]:
            print(f"   ‚úÖ An√°lise conclu√≠da:")
            print(f"   ‚Ä¢ Respons√°veis n√£o cadastrados: {resultado['count']}")
            if resultado['count'] > 0:
                print("   ‚Ä¢ Exemplos:")
                for detalhe in resultado['detalhes'][:3]:  # Mostra s√≥ os 3 primeiros
                    print(f"     - {detalhe['nome']}: {detalhe['quantidade_pagamentos']} pagamentos")
        else:
            print(f"   ‚ùå Erro: {resultado['error']}")
    except Exception as e:
        print(f"   ‚ùå Exce√ß√£o: {str(e)}")

def verificar_dados_essenciais():
    """Verifica se existem dados essenciais para o funcionamento"""
    print("\nüìä Verificando dados essenciais...")
    
    # Verificar se existem turmas
    try:
        turmas = supabase.table("turmas").select("*").execute()
        if turmas.data:
            print(f"‚úÖ Turmas: {len(turmas.data)} cadastradas")
        else:
            print("‚ö†Ô∏è  Nenhuma turma cadastrada - ser√° necess√°rio cadastrar turmas primeiro")
    except Exception as e:
        print(f"‚ùå Erro ao verificar turmas: {str(e)}")
    
    # Verificar se existem dados no extrato PIX
    try:
        extrato = supabase.table("extrato_pix").select("*").limit(1).execute()
        if extrato.data:
            print("‚úÖ Extrato PIX: Cont√©m dados para processamento")
        else:
            print("‚ÑπÔ∏è  Extrato PIX vazio - importe dados PIX primeiro")
    except Exception as e:
        print(f"‚ùå Erro ao verificar extrato PIX: {str(e)}")
    
    # Verificar respons√°veis e alunos
    try:
        responsaveis = supabase.table("responsaveis").select("*").limit(1).execute()
        alunos = supabase.table("alunos").select("*").limit(1).execute()
        
        print(f"‚ÑπÔ∏è  Respons√°veis: {'Existem cadastros' if responsaveis.data else 'Nenhum cadastrado ainda'}")
        print(f"‚ÑπÔ∏è  Alunos: {'Existem cadastros' if alunos.data else 'Nenhum cadastrado ainda'}")
        
    except Exception as e:
        print(f"‚ùå Erro ao verificar dados: {str(e)}")

def main():
    """Executa todos os testes"""
    print("=" * 60)
    print("üß™ TESTE DO SISTEMA DE GEST√ÉO ESCOLAR")
    print("=" * 60)
    
    # Teste 1: Conex√£o
    if not testar_conexao():
        print("\n‚ùå Interrompendo testes devido a erro de conex√£o")
        return
    
    # Teste 2: Tabelas
    if not testar_tabelas():
        print("\n‚ö†Ô∏è  Alguns problemas com tabelas foram encontrados")
        print("O sistema pode n√£o funcionar completamente")
    
    # Teste 3: Fun√ß√µes
    testar_funcoes_basicas()
    
    # Teste 4: Dados
    verificar_dados_essenciais()
    
    print("\n" + "=" * 60)
    print("üéØ RESUMO DOS TESTES")
    print("=" * 60)
    print("‚úÖ Se todos os testes passaram, o sistema est√° pronto para uso!")
    print("‚ö†Ô∏è  Se houve avisos, verifique se voc√™ tem os dados necess√°rios")
    print("‚ùå Se houve erros, corrija-os antes de usar o sistema")
    
    print("\nüìö PR√ìXIMOS PASSOS:")
    print("1. Se tudo est√° OK, execute: python exemplo_uso_supabase.py")
    print("2. Para processamento manual, use as fun√ß√µes em supabase_functions.py")
    print("3. Consulte o README_SISTEMA_GESTAO.md para documenta√ß√£o completa")

if __name__ == "__main__":
    main() 